/*
 * This file is generated by jOOQ.
 */
package jooq.steve.db;


import jooq.steve.db.tables.Answer;
import jooq.steve.db.tables.Question;
import jooq.steve.db.tables.SchemaVersion;
import jooq.steve.db.tables.User;
import jooq.steve.db.tables.records.AnswerRecord;
import jooq.steve.db.tables.records.QuestionRecord;
import jooq.steve.db.tables.records.SchemaVersionRecord;
import jooq.steve.db.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * trabm2_eng2.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnswerRecord> KEY_ANSWER_PRIMARY = Internal.createUniqueKey(Answer.ANSWER, DSL.name("KEY_answer_PRIMARY"), new TableField[] { Answer.ANSWER.ANSWER_PK }, true);
    public static final UniqueKey<QuestionRecord> KEY_QUESTION_PRIMARY = Internal.createUniqueKey(Question.QUESTION, DSL.name("KEY_question_PRIMARY"), new TableField[] { Question.QUESTION.QUESTION_PK }, true);
    public static final UniqueKey<SchemaVersionRecord> KEY_SCHEMA_VERSION_PRIMARY = Internal.createUniqueKey(SchemaVersion.SCHEMA_VERSION, DSL.name("KEY_schema_version_PRIMARY"), new TableField[] { SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.USER_PK }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AnswerRecord, QuestionRecord> FK_ANSWER_QUESTION_PK = Internal.createForeignKey(Answer.ANSWER, DSL.name("fk_answer_question_pk"), new TableField[] { Answer.ANSWER.QUESTION_PK }, Keys.KEY_QUESTION_PRIMARY, new TableField[] { Question.QUESTION.QUESTION_PK }, true);
    public static final ForeignKey<AnswerRecord, UserRecord> FK_ANSWER_USER_PK = Internal.createForeignKey(Answer.ANSWER, DSL.name("fk_answer_user_pk"), new TableField[] { Answer.ANSWER.USER_PK }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.USER_PK }, true);
    public static final ForeignKey<QuestionRecord, UserRecord> FK_QUESTION_USER_PK = Internal.createForeignKey(Question.QUESTION, DSL.name("fk_question_user_pk"), new TableField[] { Question.QUESTION.USER_PK }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.USER_PK }, true);
}
